import SCons.Util
import SCons.Node.FS
#from scons_csharp import add_version

env = Environment(tools=['scons_csharp', 'msvs'])

def add_version(target, source, env):
    if env.has_key('VERSION'):
        if SCons.Util.is_String(target[0]):
            versionfile = target[0] + '_VersionInfo.cs'
        else:
            versionfile = target[0].name + '_VersionInfo.cs'
        source.append(env.Command(versionfile, [Value(getVersionAsmDirective(*parseVersion(env)))], generateVersionId))
    return (target, source)

# MsCliLibBuilder can not use ASSEMBLYREFS. I couldn't understand why
# author write that. MsCliLibBuilder will add /reference s.
MsCliLibBuilder2 = SCons.Builder.Builder(action = '$CSCLIBCOM',
                                        source_factory = SCons.Node.FS.default_fs.Entry,
                                        emitter = add_version,
                                        suffix = '$SHLIBSUFFIX')
env['BUILDERS']['CLILibrary2'] = MsCliLibBuilder2

# MsCLIProgram does not contains -lib option, but CLILibrary conatians
# that. MsCLIProgram2 will contains -lib option.
MsCliBuilder2 = SCons.Builder.Builder(action = '$CSCCOM2',
                                        source_factory = SCons.Node.FS.default_fs.Entry,
                                        emitter = add_version,
                                        suffix = '$SHLIBSUFFIX')
env['CSCCOM2']       = '$CSC $CSCFLAGS $_CSCFLAGS $_CSCLIBPATH -out:${TARGET.abspath} $_CSC_REFS $_CSC_MODS $_CSC_SOURCES'
env['BUILDERS']['CLIProgram2'] = MsCliBuilder2

refs = [
    'System.dll',
    'System.Windows.Forms.dll',
    'System.Drawing.dll',
    'System.Core.dll',
    'mscorlib.dll',

    'assemblies/nunit.framework.dll',
    #'PresentationFramework.dll' # To use We have to add dll. See 'CILLIBPATH'
    ]

refs_testing = [
    'nunit.framework.dll'
    ]

sources = ['main.cs',
           'NativeMethods.cs',
           'Capture.cs',
           'GraphicsMgr.cs',
           'Structures.cs',
           'GDI.cs',
           'libs.cs',

           'Crop/Area.cs',
           'Crop/AreaManager.cs',
           'Crop/Crop.cs',
           'Crop/RectangleArea.cs',
           'Crop/ResizeManager.cs',
           ]

#TODO: We need a function to get the name of the directory of .NET framework.

# csc couldn't find PresentationFramework.dll. So we have to manually add
# the directory. Or copy the dll. I guess that how use GAC.
# PresentationFramework is a part of GAC. c:/Windows/assembly conatins
# that. To use PresentationFramework.dll assembly we have to add the path
# with -lib option of csc. Following talk about that. But I couldn't
# understand why I have to add the path.
# - http://social.msdn.microsoft.com/Forums/is/csharpgeneral/thread/d6dbaa93-8832-41c8-ab28-dd24039b4428
# - http://stackoverflow.com/questions/10722832/csc-exe-reference-external-dll-file
env['CILLIBPATH'] = [
    'C:/Windows/Microsoft.NET/Framework/v4.0.30319/WPF'
    ]

env.CLIProgram2('bin/crop.exe', sources, ASSEMBLYREFS=refs, WINEXE=True)
#env.CLILibrary2('libsTest.dll', ['libsTest.cs', 'libs.cs'], ASSEMBLYREFS=refs)
#env.CLIProgram('test.exe', ['test.cs', 'libs.cs'], ASSEMBLYREFS=refs)
